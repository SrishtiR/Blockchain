Web3 = require('web3')

> web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));

> web3.eth.accounts

> code = fs.readFileSync('fundrebal.sol').toString()
> solc = require('solc')
> compiledCode = solc.compile(code)

> abiDefinition = JSON.parse(compiledCode.contracts[':FundRebalance'].interface)
> fundContract = web3.eth.contract(abiDefinition)
> byteCode = compiledCode.contracts[':FundRebalance'].bytecode
> deployedContract = fundContract.new(100,300,{data: byteCode, from: web3.eth.accounts[0], gas: 4700000})
> deployedContract.address
> contractInstance = fundContract.at(deployedContract.address)

> a = contractInstance.getfundA.call();

{ [String: '0'] s: 1, e: 0, c: [ 0 ] }

> contractInstance.rebalancefunds(100,"A")

'0xdedc7ae544c3dde74ab5a0b07422c5a51b5240603d31074f5b75c0ebc786bf53'

> contractInstance.voteForCandidate('Rama', {from: web3.eth.accounts[0]})

'0x02c054d238038d68b65d55770fabfca592a5cf6590229ab91bbe7cd72da46de9'

> contractInstance.voteForCandidate('Rama', {from: web3.eth.accounts[0]})

'0x3da069a09577514f2baaa11bc3015a16edf26aad28dffbcd126bde2e71f2b76f'

> contractInstance.totalVotesFor.call('Rama').toLocaleString()

'3'